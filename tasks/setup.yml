---
# Setup folders
- name: ANSISTRANO | Ensure deployment base path exists
  file:
    state: directory
    path: "{{ ansistrano_deploy_to }}"

- name: ANSISTRANO | Ensure releases folder exists
  file:
    state: directory
    path: "{{ ansistrano_releases_path }}"

- name: ANSISTRANO | Ensure shared elements folder exists
  file:
    state: directory
    path: "{{ ansistrano_shared_path }}"

# Ensure shared path exists
- name: ANSISTRANO | Ensure shared paths exists
  file:
    state: directory
    path: "{{ ansistrano_deploy_to }}/shared/{{ item }}"
  with_items: "{{ ansistrano_shared_paths }}"
  when: ansistrano_ensure_shared_paths_exist

# Ensure basedir shared files exists
- name: ANSISTRANO | Ensure basedir shared files exists
  file:
    state: directory
    path: "{{ ansistrano_deploy_to }}/shared/{{ item | dirname }}"
  with_items: "{{ ansistrano_shared_files }}"
  when: ansistrano_ensure_basedirs_shared_files_exist

# Ensure no deploys exist that are later than what current points to.
# They are probably previously failed deploys and it would be dangerous
# to allow them to exist, since they can be rolled back to.
- name: ANSISTRANO | get current release name
  shell: test -L {{ansistrano_deploy_to}}/{{ansistrano_current_dir}} && readlink -f {{ansistrano_deploy_to}}/{{ansistrano_current_dir}}
  register: ansistrano_old_current
  ignore_errors: true
- name: ANSISTRANO | delete previous incomplete deploys
  shell: find {{ansistrano_deploy_to}}/{{ansistrano_version_dir}}/* -maxdepth 0 -newer {{ansistrano_old_current.stdout}} -exec rm -rf "{}" \;
  when: ansistrano_old_current.rc == 0

