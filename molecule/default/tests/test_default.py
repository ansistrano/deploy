import os
import pytest
import testinfra.utils.ansible_runner

testinfra_hosts = testinfra.utils.ansible_runner.AnsibleRunner(
    os.environ['MOLECULE_INVENTORY_FILE']).get_hosts('all')

current_path = pytest.current_path
archive_name = "artifact2.zip"


def test_ansistrano_downloaded_files_does_not_exists(host):
    f = host.file(current_path + "/" + archive_name)

    assert not f.exists

def test_ansistrano_database_file_exists(host):
    f = host.file(current_path + "/config/database.yml")

    assert f.exists
    assert f.user == 'admin'
    assert f.group == 'admin'

def test_ansistrano_database_file_contains(host):
    f = host.file(current_path + "/config/database.yml")

    assert f.exists
    assert f.user == 'admin'
    assert f.group == 'admin'

    expected = [
        b'# Ansible managed: Do NOT edit this file manually!',
        b'',
        b'mysql_host: "localhost"',
        b'mysql_user: "cycloid"',
        b'mysql_password: "cycloid"'
    ]
    for line in expected:
        assert line in f.content

def test_ansistrano_environment_file_exists(host):
    f = host.file(current_path + "/config/environment.yml")

    assert f.exists
    assert f.user == 'admin'
    assert f.group == 'admin'

def test_ansistrano_environment_file_contains(host):
    f = host.file(current_path + "/config/environment.yml")

    assert f.exists
    assert f.user == 'admin'
    assert f.group == 'admin'

    expected = [
        b'# Ansible managed: Do NOT edit this file manually!',
        b'',
        b'# GENERAL',
        b'export GENERAL_APP_NAME="cycloid"',
        b'export GENERAL_APP_DOMAIN="cycloid.io"'
    ]

    for line in expected:
        assert line in f.content

def test_ansistrano_cycloid_file_exists(host):
    f = host.file(current_path + "/config/cycloid.yml")

    assert f.exists
    assert f.user == 'admin'
    assert f.group == 'admin'


def test_ansistrano_cycloid_file_contains(host):
    f = host.file(current_path + "/config/cycloid.yml")

    assert f.exists
    assert f.user == 'admin'
    assert f.group == 'admin'

    expected = [
        b'# Ansible managed: Do NOT edit this file manually!',
        b'',
        b'remote_mysql_host: "localhost"',
        b'remote_mysql_user: "cycloid"',
        b'remote_mysql_password: "cycloid"'
    ]

    for line in expected:
        assert line in f.content

def test_ansistrano_public_sitemaps_path_exists(host):
    d = host.file(current_path + "/public/sitemaps")

    assert d.is_symlink
    assert d.user == 'admin'
    assert d.group == 'admin'