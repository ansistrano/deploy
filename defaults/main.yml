---
ansistrano_app_name: "default_app_name"
ansistrano_user: "admin"
ansistrano_group: "{{ ansistrano_user }}"
deploy_user: "{{ ansistrano_user }}"

# Path where the code to deploy is
ansistrano_deploy_from: "{{ playbook_dir }}"

# Path where the code must be deployed to
ansistrano_deploy_to: "/var/www/my-app"
ansistrano_setup_only: false
ansistrano_rolling_releases: true

# Folder name for the releases
ansistrano_version_dir: "releases"

# Full path to the releases
ansistrano_releases_path: "{{ ansistrano_deploy_to }}/{{ ansistrano_version_dir }}"

# Full path to the shared path folder
ansistrano_shared_path: "{{ ansistrano_deploy_to }}/shared"

# Softlink name for the current release
ansistrano_current_dir: "current"

# Current directory deployment strategy
ansistrano_current_via: "symlink"

# Shared paths to symlink to release dir
ansistrano_shared_paths: []

# Shared files to symlink to release dir
ansistrano_shared_files: []

# Shared paths and basedir shared files creation
ansistrano_ensure_shared_paths_exist: yes
ansistrano_ensure_basedirs_shared_files_exist: yes

# Number of releases to keep in your hosts, if 0, unlimited releases will be kept
ansistrano_keep_releases: 5

# Deployment strategies variables

# Due to runtime variable evaluation, the ansistrano_deploy_via default is actually
# defined in update-code.yml instead of this file. You can still override it in your
# playbook as needed.
# ansistrano_deploy_via: "rsync"

## GIT pull strategy
ansistrano_git_repo: git@github.com:USERNAME/REPO.git
ansistrano_git_branch: master
ansistrano_git_repo_tree: ""
ansistrano_git_identity_key_path: ""

## SVN pull strategy
ansistrano_svn_repo: "https://svn.company.com/project"
ansistrano_svn_branch: "trunk"
ansistrano_svn_revision: "HEAD"
ansistrano_svn_username: "user"
ansistrano_svn_password: "Pa$$word"
ansistrano_svn_environment: {}

## RSYNC push strategy
ansistrano_rsync_extra_params: ""
## put user@ for the remote paths. If you have a custom ssh config to define
## the remote user for a host that does not match the inventory user,
## you should set this parameter to "no".
ansistrano_rsync_set_remote_user: yes

## Download strategy
ansistrano_get_url: https://github.com/someproject/somearchive.tar.gz

## S3 get strategy
ansistrano_s3_bucket: s3bucket
ansistrano_s3_object: s3object.tgz
ansistrano_s3_region: eu-west-1
ansistrano_s3_rgw: false
ansistrano_s3_archive_content: false

## Sends anonymous stats to the www.ansistrano.com servers
## You can disallow it by just setting this parameter to "no" in your playbook
ansistrano_allow_anonymous_stats: no

slack_token: ""
slack: false
slack_headline: ""
slack_icon_url: ""

# Handler flag
ansistrano_supervisord_enabled: false
ansistrano_supervisord_restart_only: false
ansistrano_supervisord_programs:
  - "{{ ansistrano_app_name }}"
ansistrano_nginx_enabled: false
ansistrano_php5_fpm_enabled: false

# Legacy namming
ansistrano_php_fpm_enabled: "{{ansistrano_php5_fpm_enabled}}"
ansistrano_php_fpm_service_name: "php5-fpm"

# Sensu
ansistrano_sensu_enabled: false
ansistrano_sensu_stashes: []

# Chmod used for webproject with www-data
ansistrano_chmod_gid: false

# Use in case of archive code
ansistrano_additional_path: ""

ansistrano_rolling_elb_enabled: false
ansistrano_elb_name: ""
aws_region: "eu-west-1"

# a list of path used by config files
ansistrano_parameters_templates_directories: []
# a list of map of config files
ansistrano_parameters_templates: []

# A list of map of config files to fetch from remote server
ansistrano_fetch_remote_templates: []
# Run once fetch remote tempplates
ansistrano_fetch_remote_templates_run_once: true

# Do not display the templates information on the output (security reason)
ansistrano_parameters_templates_no_log: True
